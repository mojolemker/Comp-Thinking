# -*- coding: utf-8 -*-
"""
Provide a short description of the program here.

Include the group number and the name of group members.
"""

from utilities import safe_input
# Use safe_input instead of Python's builtin input function for error-proof numerical inputs
# Example 1:
# value = safe_input("Enter a number: ", "ERROR: Input must be a positive numeric value.", float, 0, None)
# Example 2:
# value = safe_input("Enter a number: ", "ERROR: Input must be an integer between 1 and 100.", int, 1, 100)

items = {}
item_id = 1
stopper = True

print("Welcome to Grocery Store Inventory Management!")

options = """1. (N) Add a new product
2. (R) Remove a product
3. (D) Display a product's inventory
4. (U) Update a product
5. (A) Display all products
6. (V) Calculate total value per category
7. (S) Search for a product
8. (O) Display the options
9. (E) Exit"""

print(options)

while stopper == True:

    inputval = input("Enter Your Choice: ")

   
    if inputval.lower() == 'n' or inputval == '1':
        desc = {}
        desc["Name: "] = input("Name: ")
        desc["Category: "] = input("Category: ")
        desc["Price: $"] = safe_input("Price: ", "ERROR: Price must be a positive number.", float, 0)
        desc["Quantity: "] = safe_input("Quantity: ", "ERROR: Quantity must be a positive integer.", int, 0)
        items[item_id] = desc
        item_id += 1
        print("Item added successfully!")
    
    
    elif inputval.lower() == 'r' or inputval == '2':
        if item_id == 1:
            print("No items to remove")
            continue
        removal = safe_input("Enter the ID of the product to remove: ", "ERROR: Not a valid ID", int, 1, item_id - 1)
        if removal in items:
            del items[removal]
            print("Item removed successfully!")
    
    elif inputval == '3' or inputval.lower() == 'd':
        if item_id == 1:
            print("No items to display")
            continue
        displayid = safe_input("Enter the ID of the product to display: ", "ERROR: Not a valid ID", int, 1, item_id - 1)
        tempdict = items[displayid]
        print(f"ID: {displayid}\nName: {tempdict['Name: ']}\nCategory: {tempdict['Category: ']}\nPrice: ${tempdict['Price: $']}\nQuantitiy: {tempdict['Quantity: ']}")
        continue
    
    elif inputval == '3' or inputval.lower() == 'u':
        if item_id == 1:
            print("No items to update")
            continue
        updateid = safe_input("Enter the ID of the product to update: ", "ERROR: Not a valid ID", int, 1, item_id - 1)
        tempdict = items[updateid]
        newprice = safe_input(f"Enter the new price for '{tempdict['Name: ']}': $", "ERROR: Price must be a positve number.", float, 0)
        newquant = safe_input(f"Enter the new quantity for '{tempdict['Quantity: ']}': ", "ERROR: Quantity must be a positve integer.", int, 0)
        tempdict['Price: $'] = newprice
        tempdict['Quantity: '] = newquant
        items[updateid] = tempdict
        continue
    
    elif inputval.lower() == 'e' or inputval == '9':
        stopper = False
    
    
    elif inputval == '8' or inputval == '0':
            print(options)
    
    
    else:
        print("Invalid option entered. Enter 8 or 0 to see the otions.")
        continue
    

# Set up a dictionary for items

# Write a loop that iterates until the user decides to exit the program
#    ...

print("Goodbye!")
print(items)
            
